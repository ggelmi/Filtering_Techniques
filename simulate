% This the octave script that is generating the simulated data and also helping with the diplaying the results


% First loading the statistics package
pkg load statistics

%Defining the size of the data points
N = 20

T = 1;

% Define prior state and Covariance

x_0     = [0;0;0;0];
n = length(x_0);
P_0 = diag(ones(n,1));

%Define process model
A  = [1 0 T 0; 0 1 0 T; 0 0 1 0; 0 0 0 1]

%Process covariance
sigma = 2;
Q = sigma^2*[ T^4/4 0 T^3/2 0; 0 T^4/4 0 T^3/2; T^3/2 0 T^2 0; 0 T^3/2 0 T^2]

v = rand ("state");

%---------------% This function generates the linear state sequences

function X = genLinearStateSequence(x_0, P_0, A, Q, N)

n = length(x_0)
X = zeros(n,N)
X(:,1) = mvnrnd(x_0,P_0);
for i = 1:N
    X(:,i+1) = A*X(:,i)+ mvnrnd(zeros(n,1),Q)';
endfor

endfunction
%-------------------------------------------------------END OF FUNCTION

% calling the function to get the ground truth data
X = genLinearStateSequence(x_0, P_0, A, Q, N)

% Plotting the results of the x dimension
plot(X(1,2:N+1))

hold on

% Generating the simulated measurements

% Defining Measurement Model
H = [1 0 0 0; 0 1 0 0];

% dimensions fo the measurements
m = size(H,1);

% Measurment covariance
R = 20*diag(ones(m,1));

%--------------%This function generates the simulated measurements

function Y = genLinearMeasurementSequence(X, H, R)

m = size(H,1);
n = length(X(:,1)); 
N = length(X(1,:));
Y = zeros(m,N-1);
for i = 2:N
    Y(:,i-1) = H*X(:,i)+ mvnrnd(zeros(m,1),R)';
endfor
endfunction

%---------------------------------------------------------END OF FUNCTION-


Y = genLinearMeasurementSequence(X, H, R)

% Plotting the measurements
plot(Y(1,:));
legend({' True Data','Measurement Data'})


measurementData = Y';

save matlab_data/measData.mat measurementData

groundTruth = X';

save matlab_data/grdtruth.mat groundTruth  

var = load ("matlab_data/measData.mat");

meas = var.measurementData

var2 = load("matlab_data/grdtruth.mat");

gtruth = var2.groundTruth

